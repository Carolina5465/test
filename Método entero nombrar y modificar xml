@When("^Agentsit\\s+Actualizo\\s+XML\\s+\"([^\"]+)\"\\s+con\\s+numeros?\\s+del\\s+txt\\s+y\\s+fecha\\s+actual$")
public void actualizoXml(String rutaXml) throws Exception {
    System.out.println("==[XML Update]==");
    System.out.println("XML path: " + rutaXml);

    // 1) Leer TXT en la raíz del proyecto
    Path txtPath = Paths.get("numeros_formularios_masivos.txt");
    List<String> numeros = Files.readAllLines(txtPath, StandardCharsets.UTF_8);
    numeros.removeIf(s -> s == null || s.trim().isEmpty());
    if (numeros.isEmpty()) throw new IllegalStateException("El TXT está vacío: " + txtPath.toAbsolutePath());

    // 2) Cargar XML
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    dbf.setNamespaceAware(true);
    DocumentBuilder db = dbf.newDocumentBuilder();
    Document doc = db.parse(new File(rutaXml));
    doc.getDocumentElement().normalize();

    // 3) XPath (ajusta según los tags reales de tu XML)
    XPath xp = XPathFactory.newInstance().newXPath();
    String XP_NUM  = "//*[local-name()='numeroDeclaracion' or local-name()='referenceNumber']";
    String XP_FECH = "//*[local-name()='fechaDeclaracion' or local-name()='declarationDate']";

    NodeList nn = (NodeList) xp.evaluate(XP_NUM,  doc, XPathConstants.NODESET);
    NodeList nf = (NodeList) xp.evaluate(XP_FECH, doc, XPathConstants.NODESET);
    if (nn.getLength() == 0 || nf.getLength() == 0)
        throw new IllegalStateException("No se encontraron nodos de número o fecha en el XML.");

    int n = Math.min(nn.getLength(), nf.getLength());
    if (numeros.size() < n)
        throw new IllegalStateException("Faltan números en el TXT. Necesarios: " + n + ", disponibles: " + numeros.size());

    String hoy = LocalDate.now().toString();
    for (int i = 0; i < n; i++) {
        Node nNum = nn.item(i);
        Node nFec = nf.item(i);
        nNum.setTextContent(numeros.get(i));
        nFec.setTextContent(hoy);
    }

    // 4) Guardar cambios (sobreescribir y crear .bak)
    Path xmlPath = Paths.get(rutaXml);
    Path backup = Paths.get(rutaXml + ".bak");
    try {
        Files.copy(xmlPath, backup, StandardCopyOption.REPLACE_EXISTING);
        System.out.println("Backup creado en: " + backup.toAbsolutePath());
    } catch (Exception ex) {
        System.out.println("No se pudo crear backup (continuo): " + ex.getMessage());
    }

    Transformer tf = TransformerFactory.newInstance().newTransformer();
    tf.setOutputProperty(OutputKeysINDENT, "yes");
    tf.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "2");
    tf.transform(new DOMSource(doc), new StreamResult(new File(rutaXml)));
    System.out.println("Archivo sobrescrito: " + xmlPath.toAbsolutePath());
    System.out.println("Total nodos actualizados: " + n + " | Fecha aplicada: " + hoy);

    // ===== 5) RENOMBRAR ARCHIVO A PARTIR DE UN XPATH =====
    // Pon aquí tu XPath que devuelve el nombre (texto) deseado.
    final String XP_RENAME = "TU_XPATH_AQUI"; // p.ej: "//*[local-name()='numeroDeclaracion'][1]"
    NodeList nameNodes = (NodeList) xp.evaluate(XP_RENAME, doc, XPathConstants.NODESET);
    if (nameNodes.getLength() == 0)
        throw new IllegalStateException("El XPath para renombrar no devolvió resultados: " + XP_RENAME);

    String nombreBase = nameNodes.item(0).getTextContent();
    if (nombreBase == null || nombreBase.trim().isEmpty())
        throw new IllegalStateException("El nodo del XPath para renombrar está vacío.");

    // Sanitizar nombre de archivo
    String limpio = nombreBase.trim()
            .replaceAll("\\p{M}+", "")                 // por si vienen acentos normalizados (opcional si no los manejas)
            .replaceAll("[\\\\/:*?\"<>|]", "_");        // caracteres no permitidos en nombre de archivo
    if (limpio.isEmpty())
        throw new IllegalStateException("El nombre resultante quedó vacío tras sanitizar: " + nombreBase);

    // Construir destino en la misma carpeta, preservando extensión
    String ext = "";
    String originalName = xmlPath.getFileName().toString();
    int dot = originalName.lastIndexOf('.');
    if (dot > 0) ext = originalName.substring(dot);   // incluye el punto (".xml" normalmente)
    Path dir = xmlPath.getParent() == null ? Paths.get(".") : xmlPath.getParent();
    Path destino = dir.resolve(limpio + ext);

    // Evitar colisión: si existe, añade (_1), (_2), ...
    int i = 1;
    while (Files.exists(destino)) {
        destino = dir.resolve(limpio + "(_" + i + ")" + ext);
        i++;
    }

    // Renombrar (mover)
    Files.move(xmlPath, destino, StandardCopyOption.REPLACE_EXISTING);
    System.out.println("XML renombrado a: " + destino.toAbsolutePath());
}
